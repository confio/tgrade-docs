(self.webpackChunktgrade_docs=self.webpackChunktgrade_docs||[]).push([[157],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=u(n),c=o,h=m["".concat(l,".").concat(c)]||m[c]||p[c]||r;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function c(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3461:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return d},default:function(){return m}});var a=n(2122),o=n(9756),r=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},l="Installation",u={unversionedId:"smart-contracts/installation",id:"smart-contracts/installation",isDocsHomePage:!1,title:"Installation",description:"In this section, we will gear up your workhorse for developing, deploying and, enjoying smart contracts on Tgrade network.",source:"@site/developer/02-smart-contracts/02-installation.md",sourceDirName:"02-smart-contracts",slug:"/smart-contracts/installation",permalink:"/tgrade-docs/developer/smart-contracts/smart-contracts/installation",editUrl:"https://github.com/confio/tgrade-docs/edit/main/developer/02-smart-contracts/02-installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"wikiSidebar",previous:{title:"Your First Contract",permalink:"/tgrade-docs/developer/smart-contracts/smart-contracts/first-contract"},next:{title:"Setting Up Environment",permalink:"/tgrade-docs/developer/smart-contracts/smart-contracts/setting-env"}},d=[{value:"Go",id:"go",children:[]},{value:"Rust",id:"rust",children:[{value:"Installing Rust in Linux and Mac",id:"installing-rust-in-linux-and-mac",children:[]},{value:"Installing Rust in Windows 10",id:"installing-rust-in-windows-10",children:[]}]},{value:"wasmd",id:"wasmd",children:[]},{value:"Further Information on the Cosmos SDK",id:"further-information-on-the-cosmos-sdk",children:[]},{value:"Setting up your IDE",id:"setting-up-your-ide",children:[]}],p={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("p",null,"In this section, we will gear up your workhorse for developing, deploying and, enjoying smart contracts on Tgrade network."),(0,r.kt)("h2",{id:"go"},"Go"),(0,r.kt)("p",null,"You can setup golang following ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki#working-with-go"},"official documentation"),". The latest\nversions of ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd"),"\nrequire go version ",(0,r.kt)("inlineCode",{parentName:"p"},"v1.15"),"."),(0,r.kt)("h2",{id:"rust"},"Rust"),(0,r.kt)("p",null,"Assuming you have never worked with rust, you will first need to install some tooling. The standard approach is to\nuse ",(0,r.kt)("inlineCode",{parentName:"p"},"rustup")," to maintain dependencies and handle updating multiple versions of\n",(0,r.kt)("inlineCode",{parentName:"p"},"cargo")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"rustc"),", which you will be using."),(0,r.kt)("h3",{id:"installing-rust-in-linux-and-mac"},"Installing Rust in Linux and Mac"),(0,r.kt)("p",null,"First, ",(0,r.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"install rustup"),". Once installed, make sure you have the wasm32 target:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"rustup default stable\ncargo version\nrustup update stable\n\nrustup target list --installed\nrustup target add wasm32-unknown-unknown\n")),(0,r.kt)("h3",{id:"installing-rust-in-windows-10"},"Installing Rust in Windows 10"),(0,r.kt)("p",null,"First, download and execute ",(0,r.kt)("inlineCode",{parentName:"p"},"rustup-init.exe")," from ",(0,r.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"rustup.rs"),"\nor ",(0,r.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"rust-lang.org"),"."),(0,r.kt)("p",null,"If requested, manually download and install Visual C++ Build Tools 2019,\nfrom ",(0,r.kt)("a",{parentName:"p",href:"https://visualstudio.microsoft.com/visual-cpp-build-tools/"},"https://visualstudio.microsoft.com/visual-cpp-build-tools/"),' . Make sure "Windows 10 SDK" and "English language pack"\nare selected.'),(0,r.kt)("p",null,"Continue running ",(0,r.kt)("inlineCode",{parentName:"p"},"rustup-init.exe"),", and proceed with the installation."),(0,r.kt)("p",null,"Optionally:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Download and install ",(0,r.kt)("a",{parentName:"li",href:"https://www.vim.org/download.php#pc"},"gvim"),", and modify the Env vars to add \\<gvim folder",">"," to\nthe PATH."),(0,r.kt)("li",{parentName:"ul"},"Download and install ",(0,r.kt)("a",{parentName:"li",href:"https://git-scm.com/download/win"},"git for windows"),". Modify the Env vars to add \\<git\nfolder",">","\\bin to PATH."),(0,r.kt)("li",{parentName:"ul"},"Turn on Developer Mode (Settings -> Update and Security: For Developers) and enable Device Discovery, to be able to\naccess the Windows 10 server through\nssh (",(0,r.kt)("a",{parentName:"li",href:"https://www.ctrl.blog/entry/how-to-win10-ssh-service.html#section-mssshserv-enable"},"https://www.ctrl.blog/entry/how-to-win10-ssh-service.html#section-mssshserv-enable"),").")),(0,r.kt)("p",null,"Install the wasm32 target:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"rustup default stable\ncargo version\nrustup update stable\n\nrustup target list --installed\nrustup target add wasm32-unknown-unknown\n")),(0,r.kt)("p",null,"For those new to rust, the ",(0,r.kt)("inlineCode",{parentName:"p"},"stable")," channel comes out every 6 weeks with a stable release. The ",(0,r.kt)("inlineCode",{parentName:"p"},"nightly")," channel is the\nbleeding edge and not only is it a version or two ahead (for testing), but it allows some extra unstable features, whose\nAPIs may change. For compiling ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm"),", you will want to use ",(0,r.kt)("inlineCode",{parentName:"p"},"stable"),". We use ",(0,r.kt)("inlineCode",{parentName:"p"},"nightly")," to compile the runtime\nfor ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd"),", which needs it for the singlepass compiler with gas metering and more."),(0,r.kt)("h2",{id:"wasmd"},"wasmd"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wasmd")," is the backbone of CosmWasm platform. It is both blockchain node and interaction client.\nIt is the implementation of a Cosmos zone with wasm smart contracts enabled."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"tgrade")," binary that will be released soon is a modified version of ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd"),". For deployment and interaction, we will\nuse ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd")," for now."),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"ARM architecture is not supported at the moment. You can deploy contracts on ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/cosmwasm/cosmwasm-gitpod-f1b082994b7c"},"GitPod")," or an Ubuntu remote machine"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'git clone https://github.com/CosmWasm/wasmd.git\ncd wasmd\n# replace the v0.18.0 with the most stable version on https://github.com/CosmWasm/wasmd/releases\ngit checkout v0.18.0\nmake install\n\ngo install -mod=readonly \\\n  -ldflags "-X github.com/cosmos/cosmos-sdk/version.Name=tgrade -X github.com/CosmWasm/wasmd/app.Bech32Prefix=tgrade" \\\n   ./cmd/wasmd\n\n# verify the installation\nwasmd version\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"}," If you have any problems here, check your ",(0,r.kt)("inlineCode",{parentName:"p"},"PATH"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"make install")," will copy ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd")," to\n",(0,r.kt)("inlineCode",{parentName:"p"},"$HOME/go/bin")," by default, please make sure that is set up in your ",(0,r.kt)("inlineCode",{parentName:"p"},"PATH")," as well, which should be the case in general\nfor building Go code from source."))),(0,r.kt)("h2",{id:"further-information-on-the-cosmos-sdk"},"Further Information on the Cosmos SDK"),(0,r.kt)("p",null,"These represent an instance of a blockchain that utilizes all of the stable features of\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk"},"Cosmos SDK"),". As such, ",(0,r.kt)("inlineCode",{parentName:"p"},"wasmd")," have all the same features (plus WASM smart\ncontracts obviously). If you are a depth first learner, take a look at\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/gaia/tree/main/docs/gaia-tutorials"},"Gaia docs"),". If you'd like to learn more about getting\nstarted with the Cosmos SDK in general, take a look at the series of\n",(0,r.kt)("a",{parentName:"p",href:"https://tutorials.cosmos.network/"},"Tutorials")," that show how to build custom modules for application-specific\nblockchains."),(0,r.kt)("h2",{id:"setting-up-your-ide"},"Setting up your IDE"),(0,r.kt)("p",null,"We will need a good editor to guide us through the experience. We highly recommend plugins that help you learn syntax,\nespecially when just starting rust. There are two free editor environments we recommend, choose the one that is more\nfamiliar to you."),(0,r.kt)("p",null,"If you use VSCode (",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/download"},"Download link"),") you just need to add the rust plugin. This\nis the best supported environment for RLS (Rust Language Server) and uses the rust compiler to type-check all your code\non save. This gives the same error messages as the actual compiler would and highlights along the line of the code, but\nit can be a bit slow to respond sometime (as it runs the compiler). It is quite good, and if you are used to VSCode, I\nhighly recommend it:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust"},"RLS for VSCode")),(0,r.kt)("p",null,"The other option I can recommend it Intellij IDEA Community\nEdition (",(0,r.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/idea/download/"},"Download link"),"), along with the Rust Plugin. This has very nice and\nquick support for many language features directly inline. In particular, it shows the inferred types along variables,\nwhich can be very helpful, especially when working with (nested) generics. It catches most syntax errors very quickly,\nbut not all of them. Which means sometimes you have to look at the compile failures to find the errors. If you are\ncoming from another Intellij product (eg. Goland), I recommend this approach:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://intellij-rust.github.io/"},"RUST for Intellij")),(0,r.kt)("p",null,"There are many more editors out there and some have varying degrees of rust support, at least syntax highlighting, but I\nwould recommend trying one of the two above, especially if you are new to rust. Once you are confident in the language,\nyou can always use another editor and customize it to your liking."))}m.isMDXComponent=!0}}]);